service: social-network-serverless

custom:
  configFile: ${file(../config.yml)}

provider:
  name: aws
  stage: ${self:custom.configFile.stage}
  variant: ${self:custom.configFile.variant}
  runtime: java8
  region: ${self:custom.configFile.region}
  timeout: 30 # The default is 6 seconds. Note: API Gateway current maximum is 30 seconds
  memorySize: 4096 # Overwrite the default memory size. Default is 1024. Increase by 64.
  deploymentBucket: ${self:custom.configFile.deploymentBucket}
  environment: ${file(../config.yml)}
  stackName: ${self:provider.stage}-${self:provider.variant}-${self:service}

package:
  artifact: target/social-network-serverless-lambda.jar

functions:
  socialNetworkServerless:
    # name must have length less than or equal to 64
    name: ${self:provider.stage}-${self:provider.variant}-socialNetworkServerless
    handler: com.jessica.social.network.serverless.lambda.handler.StreamLambdaHandler
    role: !GetAtt [LambdaExecutionRole, Arn]
    events:
      - http:
          path: /{proxy+}
          method: any

resources:
  Resources:
    LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub "${self:provider.stage}_LambdaExecutionRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSXrayFullAccess
          - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
        